//
//  CleanproHeader.pch
//  Cleanpro
//
//  Created by mac on 2018/6/5.
//  Copyright © 2018年 mac. All rights reserved.
//

#ifndef CleanproHeader_pch
#define CleanproHeader_pch
#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height
#define rgba(r,g,b,A) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:A]
#define NAVIGATION_HEIGHT (CGRectGetHeight([[UIApplication sharedApplication] statusBarFrame]) + CGRectGetHeight(self.navigationController.navigationBar.frame))

#define kIs_iphone (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define kIs_iPhoneX SCREEN_WIDTH >=375.0f && SCREEN_HEIGHT >=812.0f&& kIs_iphone
/*状态栏高度*/
#define kStatusBarHeight (CGFloat)kIs_iPhoneX?(44.0):(20.0)
/*导航栏高度*/
#define kNavBarHeight 44.0
/*状态栏和导航栏总高度*/
#define kNavBarAndStatusBarHeight kIs_iPhoneX?(88.0):(64.0)
/*TabBar高度*/
#define kTabBarHeight (CGFloat)kIs_iPhoneX?(49.0 + 34.0):(49.0)
/*顶部安全区域远离高度*/
#define kTopBarSafeHeight (CGFloat)kIs_iPhoneX?(44.0):(0)
/*底部安全区域远离高度*/
#define kBottomSafeHeight (CGFloat)kIs_iPhoneX?(34.0):(0)
/*iPhoneX的状态栏高度差值*/
#define kTopBarDifHeight (CGFloat)kIs_iPhoneX?(24.0):(0)
/*导航条和Tabbar总高度*/



#import "AFNetworking.h"
#import "MBProgressHUD.h"
#import "AFNetWrokingAssistant.h"
#import "UIViewController+BackButtonHandler.h"
#import "VPKCUIViewExt.h"
#import "PublicLibrary.h"
#import "TPPasswordTextView.h"
#import "ChangeLanguage.h"
#import "MJRefresh.h"
#import "LoginViewController.h"
#import "SDWebImage.h"
#import "UIColor+ColorChange.h"
#import "HQTextField.h"
#import "UIBezierPathView.h"
#import "HXBleManager.h"
//#import <luckysdk/Manager.h>
//#import <luckysdk/NetworkConfig.h>

//#import <CocoaLumberjack/CocoaLumberjack.h>
//static const DDLogLevel ddLogLevel = DDLogLevelDebug;
///// tabbar 消息红点类
#import "UITabBar+badge.h"
//// 自定义 viewcontroller
#import "DryerViewController.h"
#import "LaundryViewController.h"

#import "EWashHeader.h"
#import "ClassAll.h"
#import "SaveUserIDMode.h"
#import "MJExtension.h"
#import "DataModel.h"


////加载语言的宏
#define CNS @"zh-Hans"//// 中文
#define EN @"en" //// 英文
#define malai @"ms" //// 马来文

#define TaiWen @"th-TH" //// 泰文

#define FGGetStringWithKeyFromTable(key, tbl) [[ChangeLanguage sharedInstance] getStringForKey:key withTable:tbl]


#define kRegisterBackgroundNoti @"kRegisterBackgroundNoti"
#define kRegisterFrontNoti @"kRegisterFrontNoti"
#define kRegisterMessage @"kRegisterMessage"
#define kRegisterMessageList @"kRegisterMessageList"
#define sendMessage(key)  [[NSNotificationCenter defaultCenter] postNotificationName:key object:self userInfo:nil];//发送通知


#define phoneNumberString [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"phoneNumber"]]
#define TokenStr [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Token"]]
#define userIdStr [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"userId"]]
#define getRectNavAndStatusHight self.navigationController.navigationBar.frame.size.height+[[UIApplication sharedApplication] statusBarFrame].size.height


//如果release状态就不执行NSLog函数
#ifndef __OPTIMIZE__
#define NSLog(...) NSLog(__VA_ARGS__)
#else
# define NSLog(...) {}
#endif


#define ACCEPTTYPENORMAL @[@"application/json",@"application/xml",@"text/json",@"text/javascript",@"text/html",@"text/plain"]
#define ACCEPTTYPEIMAGE @[@"text/plain", @"multipart/form-data", @"application/json", @"text/html", @"image/jpeg", @"image/png", @"application/octet-stream", @"text/json"]
//以iphone5，5s，5c为基本机型，其他型号机器按比例系数做乘法.

#define autoSizeScaleX_5s SCREEN_WIDTH/320.f
#define autoSizeScaleY_5s SCREEN_HEIGHT/568.f
#define autoSizeScaleX  SCREEN_WIDTH/414.f
#define autoSizeScaleY  SCREEN_HEIGHT/736.f
#define autoSizeScaleX_6  SCREEN_WIDTH/375
#define autoSizeScaleY_6  SCREEN_HEIGHT/667
#define autoSizeScaleX_X  SCREEN_WIDTH/375
#define autoSizeScaleY_X  SCREEN_HEIGHT/812
// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

//  接口  URL
//#define FuWuQiUrl @"http://192.168.0.240:8098/ebox/api/v1/" ///服务器地址
//#define FuWuQiUrl @"http://47.90.16.40:18987/ebox/api/v1/"  ///打包地址
#define FuWuQiUrl @"https://cleanpro-api.pakpobox.com/ebox/api/v1/" //  正式版服务器地址
//#define FuWuQiUrl @"http://192.168.0.62:8080/ebox/api/v1/"//测试服务器地址
//#define FuWuQiUrl @"http://192.168.0.240:8080/ebox/api/v1/"//服务器地址

#define P_Register  @"member/phoneRegister" ///注册 新改了接口

#define P_login @"member/login" ///登录

#define P_sendVerifyCode @"member/sendVerifyCode"  ////注册获取验证码
#define Post_JYverif @"member/checkVerifyCode"   ////注册校验验证码

#define GetInciteYZ @"member/getInviteCode?"   /////邀请码验证
#define Post_inviteCodeSend @"member/inviteCodeSend"  /////用户绑定邀请码


#define get_tokenUser @"member/userInfo"  ////用户登陆后用token登录


#define P_zhaohuiPassword @"member/retrievePassword"  ////找回密码获取验证码
#define P_zhaohuiPasswordYZ @"member/retrievePasswordVerify" ////找回密码验证 验证码
#define P_zhaohuiPasswordCZ @"member/resetPassword"  ////重置登录密码
////个人中心的密码修改
#define P_jiaoyanPayPassword @"member/checkPayPassword"  /////校验支付密码
#define P_XiugaiPayPassword @"member/updatePayPassword"  /////修改支付密码
#define P_ChongzhiPayPassword @"member/resetPayPassword"     /////重置支付密码
#define setPay_password @"member/setPayPassword" //// 设置支付密码
#define setpay_Getcode @"member/sendAccountVerifyCode"  /////  设置支付密码时发送验证码
#define setpay_YZGetcode @"member/checkAccountVerifyCode"  /////  设置支付密码时验证验证码



#define post_UpdateInfo @"member/updateProfile" ////更新用户信息
#define UploadHeadImage @"member/uploadHeadImage"   ////更新用户头像
#define get_downImage @"member/downloadHeadImage/"   //// 获取用户头像
#define Post_updateAddress @"member/updateAddress" ///更新用户的详细地址 PostCode
#define Get_AddressSelect @"clean/address/region/select" ///区域选择查询接口
#define GetUserAddress @"clean/address/info/" ///获取用户的详细地址



#define Get_wallet @"member/wallet"   /////获取用户钱包
#define Get_UserQuery @"member/walletLog/query"////获取用户钱包流水


#define Post_order @"cleanpro/order/create"   //生成订单
#define post_payZhifu @"payment/checkout"  ////订单支付
#define Pay_Newzhifu @"cleanpro/order/checkout" ///// 新接口  订单支付
#define Post_Ordertime @"cleanpro/order/overtime"  /// 烘干订单加时提交订单接口
#define Post_userOrder @"cleanpro/order/query"  ////查询用户订单
#define Get_OrderDetail @"cleanpro/order/detail/"  ///获取订单详情


 


#define Post_refund_apply @"cleanpro/order/refund/apply"///订单问题反馈
#define Post_refund_Image @"file/uploadImage" ///订单反馈图片上传

//#define Get_PriceList @"http://192.168.0.240:8080/ebox/api/v1/goods/member/getWashMachePrice" ////价格列表
#define Get_PriceList @"goods/member/getWashMachePrice" ////价格列表
#define Get_location @"cleanpro/location"  ///获取门店坐标

#define Get_PriceMache @"goods/member/getMachePrice?macheNo="  ////获取指定机型价格

#define PostCreateFeedback @"help/createFeedback"   ////反馈接口

#define Post_pay_chongzhi @"payment/pay"   /////钱包充值

#define Get_pay_jine @"recharge/products"  /////获取充值优惠列表


//////    消息推送
#define PostbindToken @"message/bindToken"   ///绑定token

#define get_readMessage @"message/read"   //////消息已读

#define post_deleteMessage @"message/delete"   //////消息删除

#define get_queryMessage @"message/queryMessage?"   //////查询消息列表

#define get_order_task @"cleanpro/order/" //获取云端洗衣机指令

#define get_ZuwangMessage @"bluetooth/group/" /////获取组网信息

#define get_BLEmacAddress @"bluetooth/getBluetoothInfo?macheNo=" /// 获取蓝牙模块的地址


#define get_version @"faq/loadAppVersion"

#define get_Guanggao @"advertisement/app/queryAdvertisement"   ////获取广告图片
#define get_huoquPhoto @"file/"   /////获取图片详情


///////   GCD封装一下  //可以暂停延时执行
typedef void(^SMDelayedBlockHandle)(BOOL cancel);

static SMDelayedBlockHandle perform_block_after_delay(CGFloat seconds, dispatch_block_t block) {
    
    if (nil == block) {
        return nil;
    }
    
    __block dispatch_block_t blockToExecute = [block copy];
    __block SMDelayedBlockHandle delayHandleCopy = nil;
    //我们新建一个block回调，当延迟操作完成时，让GCD走这个回调，我们可以控制这个回调的取消。
    SMDelayedBlockHandle delayHandle = ^(BOOL cancel){
        if (NO == cancel && nil != blockToExecute) {
            dispatch_async(dispatch_get_main_queue(), blockToExecute);
        }
        
        blockToExecute = nil;
        delayHandleCopy = nil;
    };
    
    delayHandleCopy = [delayHandle copy];
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, seconds * NSEC_PER_SEC), dispatch_get_main_queue(), ^{
        if (nil != delayHandleCopy) {
            delayHandleCopy(NO);
        }
    });
    
    return delayHandleCopy;
};


#endif /* CleanproHeader_pch */
